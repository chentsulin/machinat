// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`media elements match snapshot 1`] = `
Array [
  Object {
    "node": <img
      src="http://avatar.my.bot"
    />,
    "path": "$:0",
    "type": "unit",
    "value": Object {
      "message": Object {
        "attachment": Object {
          "payload": Object {
            "url": "http://avatar.my.bot",
          },
          "type": "image",
        },
      },
    },
  },
  Object {
    "node": <video
      src="http://vid.my.bot"
    />,
    "path": "$:1",
    "type": "unit",
    "value": Object {
      "message": Object {
        "attachment": Object {
          "payload": Object {
            "url": "http://vid.my.bot",
          },
          "type": "video",
        },
      },
    },
  },
  Object {
    "node": <audio
      src="http://sound.my.bot"
    />,
    "path": "$:2",
    "type": "unit",
    "value": Object {
      "message": Object {
        "attachment": Object {
          "payload": Object {
            "url": "http://sound.my.bot",
          },
          "type": "audio",
        },
      },
    },
  },
  Object {
    "node": <file
      src="http://profile.my.bot"
    />,
    "path": "$:3",
    "type": "unit",
    "value": Object {
      "message": Object {
        "attachment": Object {
          "payload": Object {
            "url": "http://profile.my.bot",
          },
          "type": "file",
        },
      },
    },
  },
]
`;

exports[`nested textual elements match snapshot 1`] = `
Array [
  Object {
    "node": <text>
      123
       
      <code>
        Hello, 
        <b>
          Luke Skywalker!
        </b>
      </code>
      <br />
      You know what?
      <br />
      <i>
        I'm your 
        <del>
          FATHER
        </del>
         
        <code>
          droid
        </code>
        .
      </i>
      <br />
      <br />
      <pre>
        May the force be with you!
      </pre>
       abc
    </text>,
    "path": "$",
    "type": "text",
    "value": "123 \`Hello, *Luke Skywalker!*\`",
  },
  Object {
    "node": <br />,
    "path": "$:3",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <text>
      123
       
      <code>
        Hello, 
        <b>
          Luke Skywalker!
        </b>
      </code>
      <br />
      You know what?
      <br />
      <i>
        I'm your 
        <del>
          FATHER
        </del>
         
        <code>
          droid
        </code>
        .
      </i>
      <br />
      <br />
      <pre>
        May the force be with you!
      </pre>
       abc
    </text>,
    "path": "$",
    "type": "text",
    "value": "You know what?",
  },
  Object {
    "node": <br />,
    "path": "$:5",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <text>
      123
       
      <code>
        Hello, 
        <b>
          Luke Skywalker!
        </b>
      </code>
      <br />
      You know what?
      <br />
      <i>
        I'm your 
        <del>
          FATHER
        </del>
         
        <code>
          droid
        </code>
        .
      </i>
      <br />
      <br />
      <pre>
        May the force be with you!
      </pre>
       abc
    </text>,
    "path": "$",
    "type": "text",
    "value": "_I'm your ~FATHER~ \`droid\`._",
  },
  Object {
    "node": <br />,
    "path": "$:7",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <br />,
    "path": "$:8",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <text>
      123
       
      <code>
        Hello, 
        <b>
          Luke Skywalker!
        </b>
      </code>
      <br />
      You know what?
      <br />
      <i>
        I'm your 
        <del>
          FATHER
        </del>
         
        <code>
          droid
        </code>
        .
      </i>
      <br />
      <br />
      <pre>
        May the force be with you!
      </pre>
       abc
    </text>,
    "path": "$",
    "type": "text",
    "value": "\`\`\`
May the force be with you!
\`\`\` abc",
  },
]
`;

exports[`shallow textual elements match snapshot 1`] = `
Array [
  Object {
    "node": <text>
      abc
    </text>,
    "path": "$::0",
    "type": "text",
    "value": "abc",
  },
  Object {
    "node": <b>
      important
    </b>,
    "path": "$::1",
    "type": "text",
    "value": "*important*",
  },
  Object {
    "node": <i>
      italic
    </i>,
    "path": "$::2",
    "type": "text",
    "value": "_italic_",
  },
  Object {
    "node": <del>
      nooooo
    </del>,
    "path": "$::3",
    "type": "text",
    "value": "~nooooo~",
  },
  Object {
    "node": <br />,
    "path": "$::4",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <code>
      foo.bar()
    </code>,
    "path": "$::5",
    "type": "text",
    "value": "\`foo.bar()\`",
  },
  Object {
    "node": <pre>
      foo.bar('hello world')
    </pre>,
    "path": "$::6",
    "type": "text",
    "value": "\`\`\`
foo.bar('hello world')
\`\`\`",
  },
]
`;

exports[`with break placed in children 1`] = `
Array [
  Object {
    "node": <text>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </text>,
    "path": "$:0",
    "type": "text",
    "value": "foo",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <text>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </text>,
    "path": "$:0",
    "type": "text",
    "value": "bar",
  },
  Object {
    "node": <b>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </b>,
    "path": "$:1",
    "type": "text",
    "value": "*foo*",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <b>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </b>,
    "path": "$:1",
    "type": "text",
    "value": "*bar*",
  },
  Object {
    "node": <i>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </i>,
    "path": "$:2",
    "type": "text",
    "value": "_foo_",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <i>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </i>,
    "path": "$:2",
    "type": "text",
    "value": "_bar_",
  },
  Object {
    "node": <del>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </del>,
    "path": "$:3",
    "type": "text",
    "value": "~foo~",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <del>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </del>,
    "path": "$:3",
    "type": "text",
    "value": "~bar~",
  },
  Object {
    "node": <code>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </code>,
    "path": "$:4",
    "type": "text",
    "value": "\`foo\`",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <code>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </code>,
    "path": "$:4",
    "type": "text",
    "value": "\`bar\`",
  },
  Object {
    "node": <pre>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </pre>,
    "path": "$:5",
    "type": "text",
    "value": "\`\`\`
foo
\`\`\`",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <pre>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </pre>,
    "path": "$:5",
    "type": "text",
    "value": "\`\`\`
bar
\`\`\`",
  },
]
`;
