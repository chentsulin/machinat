// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`text components nested textual elements match snapshot 1`] = `
Array [
  Object {
    "node": <text>
      123
       
      <code>
        Hello, 
        <b>
          Luke Skywalker!
        </b>
      </code>
      <br />
      You know what?
      <br />
      <i>
        I'm your 
        <del>
          FATHER
        </del>
         
        <code>
          droid
        </code>
        .
      </i>
      <br />
      <pre>
        May the force be with you!
      </pre>
       abc
    </text>,
    "path": "$",
    "type": "text",
    "value": "123 Hello, Luke Skywalker!",
  },
  Object {
    "node": <br />,
    "path": "$:3",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <text>
      123
       
      <code>
        Hello, 
        <b>
          Luke Skywalker!
        </b>
      </code>
      <br />
      You know what?
      <br />
      <i>
        I'm your 
        <del>
          FATHER
        </del>
         
        <code>
          droid
        </code>
        .
      </i>
      <br />
      <pre>
        May the force be with you!
      </pre>
       abc
    </text>,
    "path": "$",
    "type": "text",
    "value": "You know what?",
  },
  Object {
    "node": <br />,
    "path": "$:5",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <text>
      123
       
      <code>
        Hello, 
        <b>
          Luke Skywalker!
        </b>
      </code>
      <br />
      You know what?
      <br />
      <i>
        I'm your 
        <del>
          FATHER
        </del>
         
        <code>
          droid
        </code>
        .
      </i>
      <br />
      <pre>
        May the force be with you!
      </pre>
       abc
    </text>,
    "path": "$",
    "type": "text",
    "value": "I'm your FATHER droid.",
  },
  Object {
    "node": <br />,
    "path": "$:7",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <text>
      123
       
      <code>
        Hello, 
        <b>
          Luke Skywalker!
        </b>
      </code>
      <br />
      You know what?
      <br />
      <i>
        I'm your 
        <del>
          FATHER
        </del>
         
        <code>
          droid
        </code>
        .
      </i>
      <br />
      <pre>
        May the force be with you!
      </pre>
       abc
    </text>,
    "path": "$",
    "type": "text",
    "value": "May the force be with you! abc",
  },
]
`;

exports[`text components shallow textual elements match snapshot 1`] = `
Array [
  Object {
    "node": <text>
      abc
    </text>,
    "path": "$:0",
    "type": "text",
    "value": "abc",
  },
  Object {
    "node": <b>
      important
    </b>,
    "path": "$:1",
    "type": "text",
    "value": "important",
  },
  Object {
    "node": <i>
      italic
    </i>,
    "path": "$:2",
    "type": "text",
    "value": "italic",
  },
  Object {
    "node": <del>
      nooooo
    </del>,
    "path": "$:3",
    "type": "text",
    "value": "nooooo",
  },
  Object {
    "node": <br />,
    "path": "$:4",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <code>
      foo.bar()
    </code>,
    "path": "$:5",
    "type": "text",
    "value": "foo.bar()",
  },
  Object {
    "node": <pre>
      foo.bar('hello world')
    </pre>,
    "path": "$:6",
    "type": "text",
    "value": "foo.bar('hello world')",
  },
]
`;

exports[`text components with break placed in children 1`] = `
Array [
  Object {
    "node": <text>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </text>,
    "path": "$:0",
    "type": "text",
    "value": "foo",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <text>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </text>,
    "path": "$:0",
    "type": "text",
    "value": "bar",
  },
  Object {
    "node": <b>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </b>,
    "path": "$:1",
    "type": "text",
    "value": "foo",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <b>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </b>,
    "path": "$:1",
    "type": "text",
    "value": "bar",
  },
  Object {
    "node": <i>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </i>,
    "path": "$:2",
    "type": "text",
    "value": "foo",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <i>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </i>,
    "path": "$:2",
    "type": "text",
    "value": "bar",
  },
  Object {
    "node": <del>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </del>,
    "path": "$:3",
    "type": "text",
    "value": "foo",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <del>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </del>,
    "path": "$:3",
    "type": "text",
    "value": "bar",
  },
  Object {
    "node": <code>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </code>,
    "path": "$:4",
    "type": "text",
    "value": "foo",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <code>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </code>,
    "path": "$:4",
    "type": "text",
    "value": "bar",
  },
  Object {
    "node": <pre>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </pre>,
    "path": "$:5",
    "type": "text",
    "value": "foo",
  },
  Object {
    "node": <br />,
    "path": "$::1",
    "type": "break",
    "value": undefined,
  },
  Object {
    "node": <pre>
      <Machinat.Fragment>
        foo
        <br />
        bar
      </Machinat.Fragment>
    </pre>,
    "path": "$:5",
    "type": "text",
    "value": "bar",
  },
]
`;
